#Basics
test> show dbs
Student   8.00 KiB
admin    40.00 KiB
config   72.00 KiB
local    72.00 KiB
##Creating Database
test> use school
switched to db school
school> db.createCollection("Students")
{ ok: 1 }
school> show dbs
admin   40.00 KiB
config  72.00 KiB
local   72.00 KiB
school   8.00 KiB
#Inserting data 
db.Students.insertOne({name:"Sourav",age:21})
{
  acknowledged: true,
  insertedId: ObjectId('669831c21425a8e751c4e49b')
}
school> db.Students.find()
[
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  }
]
school> db.Students.insertMany({name:"abc",age:21},{name:"def",age:20},{name:"ghi",age:22})
MongoInvalidArgumentError: Argument "docs" must be an array of documents
school> db.Students.insertMany([{name:"abc",age:21},{name:"def",age:20},{name:"ghi",age:22}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('669832dd1425a8e751c4e49c'),
    '1': ObjectId('669832dd1425a8e751c4e49d'),
    '2': ObjectId('669832dd1425a8e751c4e49e')
  }
}
#DATA-Types
school> db.Students.insertOne({name:"datatype",date:new Date(),working:null,courses:['Bio','Chem','Maths'],address:{state:"Kar",no:123}})

{
  acknowledged: true,
  insertedId: ObjectId('669c01745c4ab0ba8bc4e49b')
}
school> db.Students.find()
[
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  },
  { _id: ObjectId('669832dd1425a8e751c4e49c'), name: 'abc', age: 21 },
  { _id: ObjectId('669832dd1425a8e751c4e49d'), name: 'def', age: 20 },
  { _id: ObjectId('669832dd1425a8e751c4e49e'), name: 'ghi', age: 22 },
  {
    _id: ObjectId('669c01745c4ab0ba8bc4e49b'),
    name: 'datatype',
    date: ISODate('2024-07-20T18:27:00.278Z'),
    working: null,
    courses: [ 'Bio', 'Chem', 'Maths' ],
    address: { state: 'Kar', no: 123 }
  }
]
#Sorting

school> db.Students.find().sort({name:1})
[
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  },
  { _id: ObjectId('669832dd1425a8e751c4e49c'), name: 'abc', age: 21 },
  {
    _id: ObjectId('669c01745c4ab0ba8bc4e49b'),
    name: 'datatype',
    date: ISODate('2024-07-20T18:27:00.278Z'),
    working: null,
    courses: [ 'Bio', 'Chem', 'Maths' ],
    address: { state: 'Kar', no: 123 }
  },
  { _id: ObjectId('669832dd1425a8e751c4e49d'), name: 'def', age: 20 },
  { _id: ObjectId('669832dd1425a8e751c4e49e'), name: 'ghi', age: 22 }
]
school> db.Students.find().sort({name:-1})
[
  { _id: ObjectId('669832dd1425a8e751c4e49e'), name: 'ghi', age: 22 },
  { _id: ObjectId('669832dd1425a8e751c4e49d'), name: 'def', age: 20 },
  {
    _id: ObjectId('669c01745c4ab0ba8bc4e49b'),
    name: 'datatype',
    date: ISODate('2024-07-20T18:27:00.278Z'),
    working: null,
    courses: [ 'Bio', 'Chem', 'Maths' ],
    address: { state: 'Kar', no: 123 }
  },
  { _id: ObjectId('669832dd1425a8e751c4e49c'), name: 'abc', age: 21 },
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  }
]
school> db.students.find().sort({age:1})

school> db.Students.find().sort({age:1})
[
  {
    _id: ObjectId('669c01745c4ab0ba8bc4e49b'),
    name: 'datatype',
    date: ISODate('2024-07-20T18:27:00.278Z'),
    working: null,
    courses: [ 'Bio', 'Chem', 'Maths' ],
    address: { state: 'Kar', no: 123 }
  },
  { _id: ObjectId('669832dd1425a8e751c4e49d'), name: 'def', age: 20 },
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  },
  { _id: ObjectId('669832dd1425a8e751c4e49c'), name: 'abc', age: 21 },
  { _id: ObjectId('669832dd1425a8e751c4e49e'), name: 'ghi', age: 22 }
]
school> db.Students.find().sort({age:-1})
[
  { _id: ObjectId('669832dd1425a8e751c4e49e'), name: 'ghi', age: 22 },
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  },
  { _id: ObjectId('669832dd1425a8e751c4e49c'), name: 'abc', age: 21 },
  { _id: ObjectId('669832dd1425a8e751c4e49d'), name: 'def', age: 20 },
  {
    _id: ObjectId('669c01745c4ab0ba8bc4e49b'),
    name: 'datatype',
    date: ISODate('2024-07-20T18:27:00.278Z'),
    working: null,
    courses: [ 'Bio', 'Chem', 'Maths' ],
    address: { state: 'Kar', no: 123 }
  }
]
#limiting 
db.Students.find().limit(1)
[
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  }
]
school> db.Students.find().limit(2)
[
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  },
  { _id: ObjectId('669832dd1425a8e751c4e49c'), name: 'abc', age: 21 }
]
 db.Students.find().sort({age:1}).limit(2)
[
  {
    _id: ObjectId('669c01745c4ab0ba8bc4e49b'),
    name: 'datatype',
    date: ISODate('2024-07-20T18:27:00.278Z'),
    working: null,
    courses: [ 'Bio', 'Chem', 'Maths' ],
    address: { state: 'Kar', no: 123 }
  },
  { _id: ObjectId('669832dd1425a8e751c4e49d'), name: 'def', age: 20 }
]
school> db.Students.find().sort({age:-1}).limit(2)
[
  { _id: ObjectId('669832dd1425a8e751c4e49e'), name: 'ghi', age: 22 },
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  }
]
#Finding 
db.collectionName.find({query},{projection})
school> db.Students.find({},{name:true})
[
  { _id: ObjectId('669831c21425a8e751c4e49b'), name: 'Sourav' },
  { _id: ObjectId('669832dd1425a8e751c4e49c'), name: 'abc' },
  { _id: ObjectId('669832dd1425a8e751c4e49d'), name: 'def' },
  { _id: ObjectId('669832dd1425a8e751c4e49e'), name: 'ghi' },
  { _id: ObjectId('669c01745c4ab0ba8bc4e49b'), name: 'datatype' },
  { _id: ObjectId('669c09402d5f7cfe7a3af9e2'), name: 'govind' }
]
school> db.Students.find({},{id:false,name:true})
MongoServerError[Location31253]: Cannot do inclusion on field name in exclusion projection
school> db.Students.find({},{_id:false,name:true})
[
  { name: 'Sourav' },
  { name: 'abc' },
  { name: 'def' },
  { name: 'ghi' },
  { name: 'datatype' },
  { name: 'govind' }
]
school> db.Students.find({_id:false},{name:true})

school> db.Students.find({},{_id:false,name:true,age:true})
[
  { name: 'Sourav', age: 21 },
  { name: 'abc', age: 21 },
  { name: 'def', age: 20 },
  { name: 'ghi', age: 22 },
  { name: 'datatype' },
  { name: 'govind', age: 22 }
]
#Update 
db.CollectionName.updateOne(filter,update)
school> db.Students.updateOne({name:"govind"},{$set:{name:"shekar"}}) //changed name from govind to shekar
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
school> db.Students.find()
[
  {
    _id: ObjectId('669831c21425a8e751c4e49b'),
    name: 'Sourav',
    age: 21
  },
  { _id: ObjectId('669832dd1425a8e751c4e49c'), name: 'abc', age: 21 },
  { _id: ObjectId('669832dd1425a8e751c4e49d'), name: 'def', age: 20 },
  { _id: ObjectId('669832dd1425a8e751c4e49e'), name: 'ghi', age: 22 },
  {
    _id: ObjectId('669c01745c4ab0ba8bc4e49b'),
    name: 'datatype',
    date: ISODate('2024-07-20T18:27:00.278Z'),
    working: null,
    courses: [ 'Bio', 'Chem', 'Maths' ],
    address: { state: 'Kar', no: 123 }
  },
  {
    _id: ObjectId('669c09402d5f7cfe7a3af9e2'),
    name: 'shekar',
    age: 22
  }
]
